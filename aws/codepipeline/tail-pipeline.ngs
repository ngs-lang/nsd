#!/usr/bin/env ngs

F main(name:Str) {
	last_exec = null
	while true {
		section "Last ExecutionId" {
			pipelineExecutionSummaries = ``aws codepipeline list-pipeline-executions --pipeline-name $name``
			pipelineExecutionId = pipelineExecutionSummaries[0].pipelineExecutionId
		}

		actionExecutionDetails = ``aws codepipeline list-action-executions --pipeline-name $name --filter "pipelineExecutionId=${pipelineExecutionId}"``

		stageStates = ``aws codepipeline get-pipeline-state --name $name``
		actions = collector {
			for stageState in stageStates {
				for actionState in stageState.actionStates {
					le = actionState.get('latestExecution', {})
					is_last = actionExecutionDetails.any({
						'pipelineExecutionId': pipelineExecutionId
						'stageName': stageState.stageName
						'actionName': actionState.actionName
					})
					collect({
						'stage': stageState.stageName
						'action': actionState.actionName
						'when': le.get('lastStatusChange')
						'status': if is_last then le.get('status')
					})
				}
			}
		}

		t = Table2::Table("Pipeline ${name} ${Time()}")
		%[stage action when status].each(Table2::register_column(t, X))
		actions.each(t.push(X))
		echo(t)

		$(sleep 10)
	}
}
