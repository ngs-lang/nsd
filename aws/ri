#!/usr/bin/env ngs
{
	prod2platform = {
		'Linux/UNIX': 'linux'
		'Linux/UNIX (Amazon VPC)': 'linux'
		'Windows': 'windows'
		'Windows (Amazon VPC)': 'windows'
	}

	warn("Re-check the results. No warranties!")

	F abstract_instance(i:Hash) {
		{
			'az':       i.Placement.AvailabilityZone
			'platform': i.get('Platform', 'linux')
			'tenancy':  i.Placement.Tenancy
			'type':     i.InstanceType
			'vpc':      i.Box('VpcId').map(Bool).dflt(false).get()
		}
	}

	F abstract_ri(r:Hash) {
		{
			'az':       r.get('AvailabilityZone')
			'platform': prod2platform[r.ProductDescription]
			'region':   r.Region
			'tenancy':  r.InstanceTenancy
			'type':     r.InstanceType
			'vpc':      r.ProductDescription.has('VPC')
			'COUNT':    r.InstanceCount
		}.rejectv(NoData)
	}

	F balance(a:Hash, b:Hash) {
		x = min([a.COUNT, b.COUNT])
		x = max([x, 0])
		a.COUNT -= x
		b.COUNT -= x
	}

	# TODO: smarter algorithm
	# TODO: instance type matching: larger/smaller are ok as long as they are in same group
	# TODO: make sure region checking is ok
	# TODO: check the logic of applying vpc/non-vpc RIs
	F balance_region_ris(abstract_instances:Hash, ris:Arr) {
		for r in ris {
			for i in abstract_instances.values() {
				r.platform != i.platform continues
				r.tenancy != i.tenancy continues
				r.type != i.type continues
				# According to https://forums.aws.amazon.com/thread.jspa?threadID=102052
				#   * VPC reserved instances don't cover non-VPC instances
				#   * Non-VPC reserved instances do cover VPC instances
				r.vpc and not(i.vpc) continues
				not(i.az.starts_with(r.region)) continues
				balance(i, r)
			}
		}
	}

	instances = AWS::regions({ ``aws ec2 describe-instances --filters 'Name=instance-state-name,Values=running' --region $A`` })
	needed = instances.map(abstract_instance).group(Str).mapv(F(abstract_instances:Arr) {
		abstract_instances[0].set('COUNT', len(abstract_instances))
	})

	ris = AWS::regions({ ``aws ec2 describe-reserved-instances --region $A --filters Name=state,Values=active`` }).map(abstract_ri)
	assert(ris.none({'az': Any}), "This script does not handle reserved instances specific to AvailabilityZone")
	Table("Reserved Instances", ris).echo()
	echo('')
	Table("Actual instances", needed.values()).echo()
	echo('')

	balance_region_ris(needed, ris)
	Table("Unused Reserved Instances", ris.reject({'COUNT': 0})).echo()
	echo('')
	Table("Actual instances not covered by Reserved Instances", needed.values().reject({'COUNT': 0})).echo()
	echo('')
}
